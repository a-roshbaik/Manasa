#!/bin/bash

# ุชุญุฏูุซ ูุงุฆูุฉ ุงูุญุฒู
echo "๐ ุชุญุฏูุซ ุงูุญุฒู..."
sudo apt update

# ุชุซุจูุช Node.js ู npm
echo "๐ฆ ุงูุชุญูู ูู Node.js ู npm..."
sudo apt install -y nodejs npm

# ุงูุชุญูู ูู ุชุซุจูุช Java
if ! command -v java &> /dev/null
then
    echo "โ Java ุบูุฑ ูุซุจุชุ ุฌุงุฑู ุงูุชุซุจูุช..."
    sudo apt install -y openjdk-17-jdk
    JAVA_HOME_PATH="/usr/lib/jvm/java-17-openjdk-amd64"
else
    JAVA_HOME_PATH=$(dirname $(dirname $(readlink -f $(which java))))
    echo "โ Java ูุซุจุช: $(java -version)"
fi

echo "๐ง ุถุจุท ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู Java..."
export JAVA_HOME=$JAVA_HOME_PATH
export PATH=$JAVA_HOME/bin:$PATH
echo 'export JAVA_HOME='$JAVA_HOME_PATH >> ~/.bashrc
echo 'export PATH=$JAVA_HOME/bin:$PATH' >> ~/.bashrc
source ~/.bashrc

# ุชุญุฏูุฏ ูุณุงุฑ ุงูุฃุฏูุงุช ุฏุงุฎู ุงููุฌูุฏ ุงูุญุงูู
CURRENT_DIR=$(pwd)
SDK_PATH="$CURRENT_DIR/AndroidSdk"

# ุงูุชุญูู ูู ุชุซุจูุช Android SDK
if [ ! -d "$SDK_PATH" ]; then
    echo "๐ฅ ุชุซุจูุช Android SDK ูู $SDK_PATH..."
    mkdir -p "$SDK_PATH/cmdline-tools"
    wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
    unzip sdk-tools.zip -d "$SDK_PATH/cmdline-tools"
    mv "$SDK_PATH/cmdline-tools/cmdline-tools" "$SDK_PATH/cmdline-tools/latest"
    rm sdk-tools.zip
else
    echo "โ Android SDK ูุซุจุช ูู $SDK_PATH."
fi

echo "๐ง ุถุจุท ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู Android SDK..."
export ANDROID_HOME=$SDK_PATH
export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0:$PATH
echo 'export ANDROID_HOME='$ANDROID_HOME >> ~/.bashrc
echo 'export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0:$PATH' >> ~/.bashrc
source ~/.bashrc

# ุชุซุจูุช ุงูุฃุฏูุงุช ุงููุทููุจุฉ ุฏุงุฎู SDK ูุน ุชุญุฏูุฏ ุฅุตุฏุงุฑ Android 34
echo "โ๏ธ ุชุซุจูุช ุฃุฏูุงุช Android SDK..."
yes | sdkmanager --licenses
sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0" "cmdline-tools;latest"

# ุงูุชุญูู ูู ุชุซุจูุช Gradle
if ! command -v gradle &> /dev/null
then
    echo "๐ฅ ุชุซุจูุช Gradle..."
    sudo apt install -y gradle
else
    echo "โ Gradle ูุซุจุช: $(gradle -v | head -n 1)"
fi

# ุงูุชุญูู ูู ุชุซุจูุช Cordova
if ! command -v cordova &> /dev/null
then
    echo "๐ฅ ุชุซุจูุช Cordova..."
    npm install -g cordova
else
    echo "โ Cordova ูุซุจุช."
fi

# ุชุญุฏูุฏ ูุณุงุฑ ุงููุดุฑูุน ููููู ุฏุงุฎู ุงููุฌูุฏ ุงูุญุงูู
APP_PATH="$CURRENT_DIR/MyApp"

if [ ! -d "$APP_PATH" ]; then
    echo "๐ฆ ุฅูุดุงุก ูุดุฑูุน Cordova ูู $APP_PATH..."
    cordova create "$APP_PATH" com.example.hello HelloWorld
fi

# ุถุจุท ุงูุตูุงุญูุงุช ูููุน ุฃุฎุทุงุก EACCES
echo "๐ ุถุจุท ุงูุตูุงุญูุงุช..."
sudo chmod -R 777 "$APP_PATH"
sudo chown -R $USER:$USER "$APP_PATH"

# ุงูุฏุฎูู ุฅูู ูุฌูุฏ ุงููุดุฑูุน
cd "$APP_PATH"

# ุฅุถุงูุฉ ููุตุฉ Android ุจุฅุตุฏุงุฑ 34
cordova platform add android@latest

# ุนุฑุถ ุงูููุตุงุช ุงููุชุงุญุฉ
cordova platform ls

# ุจูุงุก ุงูุชุทุจูู
echo "โ๏ธ ุจูุงุก ุงูุชุทุจูู..."
cordova build android

# ุชุดุบูู ุงูุชุทุจูู ุนูู ุงูุฌูุงุฒ
echo "๐ฑ ุชุดุบูู ุงูุชุทุจูู ุนูู ุงููุงุชู..."
cordova run android

# ุชุดุบูู ุงูุชุทุจูู ุนูู ุงููุญุงูู
echo "๐ฅ๏ธ ุชุดุบูู ุงูุชุทุจูู ุนูู ุงููุญุงูู..."
cordova emulate android

echo "๐ ุชู ุงูุงูุชูุงุก ุจูุฌุงุญ!"
